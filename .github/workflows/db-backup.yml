name: Daily Postgres Backup

on:
  schedule:
    # Run daily at 02:00 UTC
    - cron: '0 2 * * *'
  workflow_dispatch: {}  # Allows manual trigger

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install PostgreSQL client 17
        run: |
          sudo apt-get update
          sudo apt-get install -y wget ca-certificates dnsutils
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install -y postgresql-client-17
          echo "/usr/lib/postgresql/17/bin" >> $GITHUB_PATH

      - name: Resolve Hostname to IPv4 Address
        id: resolve_ip
        run: |
          IPV4_ADDRESS=$(dig +short A ${{ secrets.PGHOST }} | head -n1)
          echo "Resolved IPv4 address for ${{ secrets.PGHOST }} is: $IPV4_ADDRESS"
          echo "PGHOST_IPV4=$IPV4_ADDRESS" >> $GITHUB_ENV

      - name: Create DB dump (compressed custom format)
        env:
          # Naye secrets ka istemal
          PGHOST: ${{ env.PGHOST_IPV4 }} # Hum yahan resolved IP ka istemal kar rahe hain
          PGPORT: ${{ secrets.PGPORT }}
          PGUSER: ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
          PGSSLMODE: require
        run: |
          set -e
          timestamp=$(date -u +'%Y%m%dT%H%M%SZ')
          filename="db-backup-${timestamp}.dump"
          echo "Dumping database to $filename from host ${{ env.PGHOST_IPV4 }}..."
          pg_dump -Fc -f "$filename"
          ls -lh "$filename"

      - name: Upload backup as Actions artifact
        uses: actions/upload-artifact@v4
        with:
          name: postgres-backup-${{ github.run_id }}-${{ github.run_number }}
          path: db-backup-*.dump
          retention-days: 90
